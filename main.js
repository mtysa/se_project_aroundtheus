!function(){"use strict";class e{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){this._errorMessageEl=this._formEl.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=e.validationMessage,this._errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageEl=this._formEl.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}toggleButtonState(){let e=!1;this._inputEls.forEach((t=>{t.validity.valid||(e=!0)})),e?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState(this._inputEls,this._submitButton)}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class t{constructor(e,t,s,i,r,n){let{name:o,link:a,_id:l,isLiked:c}=e;this._name=o,this._link=a,this._id=l,this._isLiked=c,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=i,this._handleLikeClick=r,this._handleUnlikeClick=n}getView(){return this._cardElement=document.querySelector("#card-template").content.firstElementChild.cloneNode(!0),this.cardImageEl=this._cardElement.querySelector(".card__image"),this.cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector("#card-like-button"),this._cardDeleteButton=this._cardElement.querySelector("#card-delete-button"),this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active"),this.cardImageEl.src=this._link,this.cardImageEl.alt=this._name,this.cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._isLiked?this._handleUnlikeClick(this):this._handleLikeClick(this)})),this._cardDeleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this.cardImageEl.addEventListener("click",(()=>this._handleImageClick({link:this._link,name:this._name})))}handleLikeButton(e){this._isLiked=e,this._cardLikeButton.classList.add("card__like-button_active")}handleUnlikeButton(e){this._isLiked=!e,this._cardLikeButton.classList.remove("card__like-button_active")}getId(){return this._id}getLikeStatus(){return this._isLiked}deleteCard(){this._cardElement.remove(),this._cardElement=null}}class s{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){let{popupSelector:t}=e;this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".modal__close")}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(e=>{e.target===this._popup&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".modal__form")}_getInputValues(){this._inputList=this._form.querySelectorAll(".modal__input");const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setButtonText(e){this._form.querySelector(".modal__button").textContent=e}}const n=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-form"),a=(document.querySelector(".cards__list"),document.querySelector("#card-template").content.firstElementChild),l=document.querySelector(".profile__add-button"),c=document.querySelector("#card-add-form"),d=document.querySelector("#profile-image-button"),h=document.querySelector("#profile-image-edit-form"),u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},_=new class{constructor(e){let{baseUrl:t,headers:s}=e;this.baseUrl=t,this.headers=s}_checkRes(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this.baseUrl}/users/me`,{headers:this.headers}).then(this._checkRes)}getInitialCards(){return fetch(`${this.baseUrl}/cards`,{headers:this.headers}).then(this._checkRes)}updateUserInfo(e,t){return fetch(`${this.baseUrl}/users/me`,{method:"PATCH",headers:this.headers,"Content-Type":"application/json",body:JSON.stringify({name:e,about:t})}).then(this._checkRes)}addCard(e,t){return fetch(`${this.baseUrl}/cards`,{method:"POST",headers:this.headers,"Content-Type":"application/json",body:JSON.stringify({name:e,link:t})}).then(this._checkRes)}deleteCard(e){return fetch(`${this.baseUrl}/cards/${e}`,{method:"DELETE",headers:this.headers,"Content-Type":"application/json"}).then(this._checkRes)}likeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this.headers,"Content-Type":"application/json"}).then(this._checkRes)}unlikeCard(e){return fetch(`${this.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this.headers,"Content-Type":"application/json"}).then(this._checkRes)}updateAvatar(e){return fetch(`${this.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this.headers,"Content-Type":"application/json",body:JSON.stringify({avatar:e})}).then(this._checkRes)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"51c65eaa-1f8a-47ac-8e22-d8720367b4fb","Content-Type":"application/json"}});new e(u,o).enableValidation();const m=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:i}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s),this._userAvatar=document.querySelector(i)}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._userName.textContent=t,this._userJob.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._userAvatar.src=t}}({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"});_.getUserInfo().then((e=>{m.setUserInfo({name:e.name,job:e.about}),m.setUserAvatar({avatar:e.avatar})})).catch((e=>{console.error(e)}));const p=new r({popupSelector:"#profile-edit-modal"},(function(e){p.setButtonText("Saving..."),_.updateUserInfo(e.title,e.description).then((()=>{m.setUserInfo({name:e.title,job:e.description})})).catch((e=>{console.error(e)})).finally((()=>{p.setButtonText("Save")})),p.close()}));p.setEventListeners(),n.addEventListener("click",(()=>{p.open()}));const E=new e(u,h);E.enableValidation();const v=new r({popupSelector:"#profile-image-edit-modal"},(function(e){v.setButtonText("Saving..."),_.updateAvatar(e.description).then((()=>{m.setUserAvatar({avatar:e.description})})).catch((e=>{console.error(e)})).finally((()=>{v.setButtonText("Save")})),v.close(),h.reset(),E.resetValidation()}));v.setEventListeners(),d.addEventListener("click",(()=>{v.open()}));const f=new e(u,c);let S;function k(e){return new t(e,a,B,L,g,y).getView()}f.enableValidation(),_.getInitialCards().then((e=>{S=new s({items:e,renderer:k},".cards__list"),S.renderItems()})).catch((e=>{console.error(e)}));const b=new r({popupSelector:"#card-add-modal"},(function(e){b.setButtonText("Saving..."),_.addCard(e.title,e.description).then((()=>{!function(e){const t=k(e);S.addItem(t)}({name:e.title,link:e.description})})).finally((()=>{b.setButtonText("Save")})),c.reset(),b.close()}));function L(e){C.open(),C.setSubmitAction((()=>{_.deleteCard(e.getId()).then((()=>{e.deleteCard(),C.close()})).catch((e=>{console.error(e)}))}))}b.setEventListeners(),l.addEventListener("click",(()=>{b.open(),f.toggleButtonState()}));const C=new class extends i{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popup.querySelector(".modal__form")}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({popupSelector:"#delete-card-modal"},L);function g(e){_.likeCard(e.getId()).then((t=>{e.handleLikeButton(t.isLiked)})).catch((e=>{console.error(e)}))}function y(e){_.unlikeCard(e.getId()).then((t=>{e.handleUnlikeButton(!t.isLiked)})).catch((e=>{console.error(e)}))}function B(e){I.open(e)}C.setEventListeners();const I=new class extends i{constructor(e){super(e),this._image=this._popup.querySelector(".modal__image"),this._caption=this._popup.querySelector(".modal__image-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}({popupSelector:"#image-preview-modal"});I.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFLdUwsT0FBT2pILElBQU0rRyxFQUFLcEksS0FDdkJqRCxLQUFLdUwsT0FBT2hILElBQU04RyxFQUFLckksS0FDdkJoRCxLQUFLd0wsU0FBU25LLFlBQWNnSyxFQUFLckksS0FDakN1RCxNQUFNVCxNQUNSLEdKcVBvQyxDQUNwQ0gsY0FBZSx5QkFHakIyRixFQUFXbkYsbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9hcm91bmR0aGV1cy8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9zZV9wcm9qZWN0X2Fyb3VuZHRoZXVzLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3RfYXJvdW5kdGhldXMvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWwpIHtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBjb25maWcuZm9ybVNlbGVjdG9yO1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZm9ybUVsID0gZm9ybUVsO1xuICB9XG4gIC8vIFNob3cgSW5wdXQgRXJyb3JcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG4gIC8vIEhpZGUgSW5wdXQgRXJyb3JcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICB0aGlzLl9lcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG4gIC8vIENoZWNrIElucHV0IFZhbGlkaXR5XG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xuICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcbiAgICB9XG4gIH1cbiAgLy8gVG9nZ2xlIEJ1dHRvbiBTdGF0ZVxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBsZXQgZm91bmRJbnZhbGlkID0gZmFsc2U7XG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICAgIGZvdW5kSW52YWxpZCA9IHRydWU7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGZvdW5kSW52YWxpZCkge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbCk7XG4gICAgfSk7XG4gIH1cblxuICAvLyBFdmVudCBMaXN0ZW5lclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcildO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9pbnB1dEVscywgdGhpcy5fc3VibWl0QnV0dG9uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIC8vIEVuYWJsZSBWYWxpZGF0aW9uXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZm9ybUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgeyBuYW1lLCBsaW5rLCBfaWQsIGlzTGlrZWQgfSxcbiAgICBjYXJkU2VsZWN0b3IsXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcbiAgICBoYW5kbGVEZWxldGVDbGljayxcbiAgICBoYW5kbGVMaWtlQ2xpY2ssXG4gICAgaGFuZGxlVW5saWtlQ2xpY2tcbiAgKSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fbGluayA9IGxpbms7XG4gICAgdGhpcy5faWQgPSBfaWQ7XG4gICAgdGhpcy5faXNMaWtlZCA9IGlzTGlrZWQ7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrID0gaGFuZGxlTGlrZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZVVubGlrZUNsaWNrID0gaGFuZGxlVW5saWtlQ2xpY2s7XG4gIH1cblxuICBnZXRWaWV3KCkge1xuICAgIC8vIGNsb25lIHRoZSB0ZW1wbGF0ZSBlbGVtZW50IHdpdGggYWxsIGl0cyBjb250ZW50IGFuZCBzdG9yZSBpdCBpbiBhIGNhcmRFbGVtZW50IHZhcmlhYmxlXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKVxuICAgICAgLmNvbnRlbnQuZmlyc3RFbGVtZW50Q2hpbGQuY2xvbmVOb2RlKHRydWUpO1xuICAgIC8vIGFjY2VzcyB0aGUgY2FyZCB0aXRsZSBhbmQgaW1hZ2UgYW5kIHN0b3JlIHRoZW0gaW4gdmFyaWFibGVzXG4gICAgdGhpcy5jYXJkSW1hZ2VFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5jYXJkVGl0bGVFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XG4gICAgLy8gYnV0dG9uc1xuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLWxpa2UtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIjY2FyZC1kZWxldGUtYnV0dG9uXCJcbiAgICApO1xuICAgIC8vIGxpa2Ugc3RhdHVzXG4gICAgdGhpcy5faXNMaWtlZFxuICAgICAgPyB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpXG4gICAgICA6IHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgLy8gc2V0IHRoZSBwYXRoIHRvIHRoZSBpbWFnZSB0byB0aGUgbGluayBmaWVsZCBvZiB0aGUgb2JqZWN0XG4gICAgdGhpcy5jYXJkSW1hZ2VFbC5zcmMgPSB0aGlzLl9saW5rO1xuICAgIC8vIHNldCB0aGUgaW1hZ2UgYWx0IHRleHQgdG8gdGhlIG5hbWUgZmllbGQgb2YgdGhlIG9iamVjdFxuICAgIHRoaXMuY2FyZEltYWdlRWwuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICAvLyBzZXQgdGhlIGNhcmQgdGl0bGUgdG8gdGhlIG5hbWUgZmllbGQgb2YgdGhlIG9iamVjdCwgdG9vXG4gICAgdGhpcy5jYXJkVGl0bGVFbC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvL2NhcmQgbGlrZSBidXR0b25cbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX2lzTGlrZWQpIHtcbiAgICAgICAgdGhpcy5faGFuZGxlVW5saWtlQ2xpY2sodGhpcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcyk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgLy9jYXJkIGRlbGV0ZSBidXR0b25cbiAgICB0aGlzLl9jYXJkRGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKTtcbiAgICB9KTtcblxuICAgIC8vIGltYWdlIHByZXZpZXdcbiAgICB0aGlzLmNhcmRJbWFnZUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh7IGxpbms6IHRoaXMuX2xpbmssIG5hbWU6IHRoaXMuX25hbWUgfSlcbiAgICApO1xuICB9XG5cbiAgaGFuZGxlTGlrZUJ1dHRvbihpc0xpa2VkKSB7XG4gICAgdGhpcy5faXNMaWtlZCA9IGlzTGlrZWQ7XG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgfVxuXG4gIGhhbmRsZVVubGlrZUJ1dHRvbihpc0xpa2VkKSB7XG4gICAgdGhpcy5faXNMaWtlZCA9ICFpc0xpa2VkO1xuICAgIHRoaXMuX2NhcmRMaWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gIH1cblxuICBnZXRJZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faWQ7XG4gIH1cblxuICBnZXRMaWtlU3RhdHVzKCkge1xuICAgIHJldHVybiB0aGlzLl9pc0xpa2VkO1xuICB9XG5cbiAgZGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcblxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoKSB7XG4gICAgdGhpcy5faXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoY2FyZEVsZW1lbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgYWRkSXRlbShjYXJkRWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGNhcmRFbGVtZW50KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9jbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGUpID0+IHtcbiAgICBpZiAoZS5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQgPT09IHRoaXMuX3BvcHVwKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcbiAgfVxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTtcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldEJ1dHRvblRleHQoYnV0dG9uVGV4dCkge1xuICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uXCIpLnRleHRDb250ZW50ID0gYnV0dG9uVGV4dDtcbiAgfVxufVxuIiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRWxlbWVudHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWVkaXQtZm9ybVwiKTtcbmV4cG9ydCBjb25zdCBjYXJkTGlzdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcbmV4cG9ydCBjb25zdCBjYXJkVGVtcGxhdGUgPVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIikuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZDtcbmV4cG9ydCBjb25zdCBjYXJkQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGNhcmRBZGRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkLWFkZC1mb3JtXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVJbWFnZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtaW1hZ2UtYnV0dG9uXCJcbik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUltYWdlRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtaW1hZ2UtZWRpdC1mb3JtXCJcbik7XG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b25fZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcbn07XG4iLCIvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbXBvcnRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG5cbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuaW1wb3J0IHtcbiAgcHJvZmlsZUVkaXRCdXR0b24sXG4gIHByb2ZpbGVFZGl0Zm9ybSxcbiAgY2FyZExpc3RFbCxcbiAgY2FyZFRlbXBsYXRlLFxuICBjYXJkQWRkQnV0dG9uLFxuICBjYXJkQWRkRm9ybSxcbiAgY29uZmlnLFxuICBwcm9maWxlSW1hZ2VCdXR0b24sXG4gIHByb2ZpbGVJbWFnZUZvcm0sXG59IGZyb20gXCIuLi91dGlscy9jb25zdGFudHMuanNcIjtcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQVBJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vL1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCI1MWM2NWVhYS0xZjhhLTQ3YWMtOGUyMi1kODcyMDM2N2I0ZmJcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFZGl0IFByb2ZpbGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG5cbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBwcm9maWxlRWRpdGZvcm0pO1xuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIG5hbWVTZWxlY3RvcjogXCIucHJvZmlsZV9fdGl0bGVcIixcbiAgam9iU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXG4gIGF2YXRhclNlbGVjdG9yOiBcIi5wcm9maWxlX19pbWFnZVwiLFxufSk7XG5cbi8vIEdldCBVc2VyIEluZm9cblxuYXBpXG4gIC5nZXRVc2VySW5mbygpXG4gIC50aGVuKChyZXMpID0+IHtcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7XG4gICAgICBuYW1lOiByZXMubmFtZSxcbiAgICAgIGpvYjogcmVzLmFib3V0LFxuICAgIH0pO1xuICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoeyBhdmF0YXI6IHJlcy5hdmF0YXIgfSk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9KTtcblxuLy8gVXBkYXRlIFVzZXIgSW5mb1xuXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdChpbnB1dFZhbHVlcykge1xuICBwcm9maWxlRWRpdFBvcHVwLnNldEJ1dHRvblRleHQoXCJTYXZpbmcuLi5cIik7XG4gIGFwaVxuICAgIC51cGRhdGVVc2VySW5mbyhpbnB1dFZhbHVlcy50aXRsZSwgaW5wdXRWYWx1ZXMuZGVzY3JpcHRpb24pXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oe1xuICAgICAgICBuYW1lOiBpbnB1dFZhbHVlcy50aXRsZSxcbiAgICAgICAgam9iOiBpbnB1dFZhbHVlcy5kZXNjcmlwdGlvbixcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHByb2ZpbGVFZGl0UG9wdXAuc2V0QnV0dG9uVGV4dChcIlNhdmVcIik7XG4gICAgfSk7XG4gIHByb2ZpbGVFZGl0UG9wdXAuY2xvc2UoKTtcbn1cblxuY29uc3QgcHJvZmlsZUVkaXRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICB7IHBvcHVwU2VsZWN0b3I6IFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiIH0sXG4gIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0XG4pO1xucHJvZmlsZUVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwcm9maWxlRWRpdFBvcHVwLm9wZW4oKTtcbn0pO1xuXG4vLyBVcGRhdGUgVXNlciBBdmF0YXJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHByb2ZpbGVJbWFnZUZvcm0pO1xuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IHByb2ZpbGVJbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIHtcbiAgICBwb3B1cFNlbGVjdG9yOiBcIiNwcm9maWxlLWltYWdlLWVkaXQtbW9kYWxcIixcbiAgfSxcbiAgaGFuZGxlUHJvZmlsZVBpY1N1Ym1pdFxuKTtcbnByb2ZpbGVJbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbnByb2ZpbGVJbWFnZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBwcm9maWxlSW1hZ2VQb3B1cC5vcGVuKCk7XG59KTtcblxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZVBpY1N1Ym1pdChpbnB1dFZhbHVlcykge1xuICBwcm9maWxlSW1hZ2VQb3B1cC5zZXRCdXR0b25UZXh0KFwiU2F2aW5nLi4uXCIpO1xuICBhcGlcbiAgICAudXBkYXRlQXZhdGFyKGlucHV0VmFsdWVzLmRlc2NyaXB0aW9uKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoeyBhdmF0YXI6IGlucHV0VmFsdWVzLmRlc2NyaXB0aW9uIH0pO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHByb2ZpbGVJbWFnZVBvcHVwLnNldEJ1dHRvblRleHQoXCJTYXZlXCIpO1xuICAgIH0pO1xuICBwcm9maWxlSW1hZ2VQb3B1cC5jbG9zZSgpO1xuICBwcm9maWxlSW1hZ2VGb3JtLnJlc2V0KCk7XG4gIGF2YXRhckZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vL1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDYXJkcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy9cblxuY29uc3QgYWRkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgY2FyZEFkZEZvcm0pO1xuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbi8vIFJlbmRlciBDYXJkc1xubGV0IGNhcmRTZWN0aW9uO1xuYXBpXG4gIC5nZXRJbml0aWFsQ2FyZHMoKVxuICAudGhlbigoY2FyZHMpID0+IHtcbiAgICBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICAgICAge1xuICAgICAgICBpdGVtczogY2FyZHMsXG4gICAgICAgIHJlbmRlcmVyOiBjcmVhdGVDYXJkLFxuICAgICAgfSxcbiAgICAgIFwiLmNhcmRzX19saXN0XCJcbiAgICApO1xuICAgIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9KTtcblxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSkge1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xuICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkRGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgY2FyZERhdGEsXG4gICAgY2FyZFRlbXBsYXRlLFxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2ssXG4gICAgaGFuZGxlTGlrZUNsaWNrLFxuICAgIGhhbmRsZVVubGlrZUNsaWNrXG4gICk7XG4gIHJldHVybiBjYXJkLmdldFZpZXcoKTtcbn1cblxuLy8gQWRkIENhcmRcblxuY29uc3QgY2FyZEFkZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXG4gIHsgcG9wdXBTZWxlY3RvcjogXCIjY2FyZC1hZGQtbW9kYWxcIiB9LFxuICBoYW5kbGVDYXJkQWRkU3VibWl0XG4pO1xuY2FyZEFkZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIGhhbmRsZUNhcmRBZGRTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcbiAgY2FyZEFkZFBvcHVwLnNldEJ1dHRvblRleHQoXCJTYXZpbmcuLi5cIik7XG4gIGFwaVxuICAgIC5hZGRDYXJkKGlucHV0VmFsdWVzLnRpdGxlLCBpbnB1dFZhbHVlcy5kZXNjcmlwdGlvbilcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICByZW5kZXJDYXJkKFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogaW5wdXRWYWx1ZXMudGl0bGUsXG4gICAgICAgICAgbGluazogaW5wdXRWYWx1ZXMuZGVzY3JpcHRpb24sXG4gICAgICAgIH0sXG4gICAgICAgIGNhcmRMaXN0RWxcbiAgICAgICk7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBjYXJkQWRkUG9wdXAuc2V0QnV0dG9uVGV4dChcIlNhdmVcIik7XG4gICAgfSk7XG4gIGNhcmRBZGRGb3JtLnJlc2V0KCk7XG4gIGNhcmRBZGRQb3B1cC5jbG9zZSgpO1xufVxuXG5jYXJkQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNhcmRBZGRQb3B1cC5vcGVuKCk7XG4gIGFkZEZvcm1WYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbn0pO1xuXG4vLyBEZWxldGUgQ2FyZFxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xuICBjYXJkRGVsZXRlUG9wdXAub3BlbigpO1xuICBjYXJkRGVsZXRlUG9wdXAuc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcbiAgICBhcGlcbiAgICAgIC5kZWxldGVDYXJkKGNhcmQuZ2V0SWQoKSlcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgY2FyZC5kZWxldGVDYXJkKCk7XG4gICAgICAgIGNhcmREZWxldGVQb3B1cC5jbG9zZSgpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIH0pO1xuICB9KTtcbn1cbmNvbnN0IGNhcmREZWxldGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oXG4gIHtcbiAgICBwb3B1cFNlbGVjdG9yOiBcIiNkZWxldGUtY2FyZC1tb2RhbFwiLFxuICB9LFxuICBoYW5kbGVEZWxldGVDbGlja1xuKTtcbmNhcmREZWxldGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vLyBDYXJkIExpa2VzXG5mdW5jdGlvbiBoYW5kbGVMaWtlQ2xpY2soY2FyZCkge1xuICBhcGlcbiAgICAubGlrZUNhcmQoY2FyZC5nZXRJZCgpKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIGNhcmQuaGFuZGxlTGlrZUJ1dHRvbihyZXMuaXNMaWtlZCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVVbmxpa2VDbGljayhjYXJkKSB7XG4gIGFwaVxuICAgIC51bmxpa2VDYXJkKGNhcmQuZ2V0SWQoKSlcbiAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICBjYXJkLmhhbmRsZVVubGlrZUJ1dHRvbighcmVzLmlzTGlrZWQpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICB9KTtcbn1cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8vXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEltYWdlIFBvcHVwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vL1xuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKGRhdGEpIHtcbiAgaW1hZ2VQb3B1cC5vcGVuKGRhdGEpO1xufVxuXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHtcbiAgcG9wdXBTZWxlY3RvcjogXCIjaW1hZ2UtcHJldmlldy1tb2RhbFwiLFxufSk7XG5cbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2NoZWNrUmVzKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfVxuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlcyk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlcyk7XG4gIH1cblxuICB1cGRhdGVVc2VySW5mbyhuYW1lLCBhYm91dCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgYWJvdXQgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlcyk7XG4gIH1cblxuICBhZGRDYXJkKG5hbWUsIGxpbmspIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgbmFtZSwgbGluayB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzKTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlcyk7XG4gIH1cblxuICBsaWtlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzKTtcbiAgfVxuXG4gIHVubGlrZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlcyk7XG4gIH1cblxuICB1cGRhdGVBdmF0YXIoYXZhdGFyKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXMpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZVNlbGVjdG9yLCBqb2JTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3VzZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX3VzZXJKb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgICB0aGlzLl91c2VyQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXJTZWxlY3Rvcik7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQsXG4gICAgICBqb2I6IHRoaXMuX3VzZXJKb2IudGV4dENvbnRlbnQsXG4gICAgfTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHsgbmFtZSwgam9iIH0pIHtcbiAgICB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudCA9IGpvYjtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoeyBhdmF0YXIgfSkge1xuICAgIHRoaXMuX3VzZXJBdmF0YXIuc3JjID0gYXZhdGFyO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gIH1cblxuICBzZXRTdWJtaXRBY3Rpb24oYWN0aW9uKSB7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGFjdGlvbjtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XG4gICAgdGhpcy5fY2FwdGlvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXRpdGxlXCIpO1xuICB9XG5cbiAgb3BlbihkYXRhKSB7XG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2ltYWdlLmFsdCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9jYXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkZvcm1WYWxpZGF0b3IiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsImZvcm1FbCIsInRoaXMiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm1FbCIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJfZXJyb3JNZXNzYWdlRWwiLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ0ZXh0Q29udGVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwicmVtb3ZlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsImZvdW5kSW52YWxpZCIsIl9pbnB1dEVscyIsImZvckVhY2giLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJyZXNldFZhbGlkYXRpb24iLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVuYWJsZVZhbGlkYXRpb24iLCJlIiwicHJldmVudERlZmF1bHQiLCJDYXJkIiwiX3JlZiIsImNhcmRTZWxlY3RvciIsImhhbmRsZUltYWdlQ2xpY2siLCJoYW5kbGVEZWxldGVDbGljayIsImhhbmRsZUxpa2VDbGljayIsImhhbmRsZVVubGlrZUNsaWNrIiwibmFtZSIsImxpbmsiLCJfaWQiLCJpc0xpa2VkIiwiX25hbWUiLCJfbGluayIsIl9pc0xpa2VkIiwiX2NhcmRTZWxlY3RvciIsIl9oYW5kbGVJbWFnZUNsaWNrIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVVbmxpa2VDbGljayIsImdldFZpZXciLCJfY2FyZEVsZW1lbnQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImNsb25lTm9kZSIsImNhcmRJbWFnZUVsIiwiY2FyZFRpdGxlRWwiLCJfY2FyZExpa2VCdXR0b24iLCJfY2FyZERlbGV0ZUJ1dHRvbiIsInNyYyIsImFsdCIsImhhbmRsZUxpa2VCdXR0b24iLCJoYW5kbGVVbmxpa2VCdXR0b24iLCJnZXRJZCIsImdldExpa2VTdGF0dXMiLCJkZWxldGVDYXJkIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXJJdGVtcyIsIml0ZW0iLCJjYXJkRWxlbWVudCIsImFwcGVuZCIsImFkZEl0ZW0iLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2Nsb3NlQnV0dG9uIiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2Zvcm0iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJfaW5wdXRMaXN0IiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwic2V0QnV0dG9uVGV4dCIsImJ1dHRvblRleHQiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVFZGl0Zm9ybSIsImNhcmRUZW1wbGF0ZSIsImNhcmRBZGRCdXR0b24iLCJjYXJkQWRkRm9ybSIsInByb2ZpbGVJbWFnZUJ1dHRvbiIsInByb2ZpbGVJbWFnZUZvcm0iLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9jaGVja1JlcyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRVc2VySW5mbyIsImZldGNoIiwidGhlbiIsImdldEluaXRpYWxDYXJkcyIsInVwZGF0ZVVzZXJJbmZvIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZENhcmQiLCJjYXJkSWQiLCJsaWtlQ2FyZCIsInVubGlrZUNhcmQiLCJ1cGRhdGVBdmF0YXIiLCJhdmF0YXIiLCJhdXRob3JpemF0aW9uIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsImF2YXRhclNlbGVjdG9yIiwiX3VzZXJOYW1lIiwiX3VzZXJKb2IiLCJfdXNlckF2YXRhciIsImpvYiIsInNldFVzZXJJbmZvIiwiX3JlZjIiLCJzZXRVc2VyQXZhdGFyIiwiX3JlZjMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInByb2ZpbGVFZGl0UG9wdXAiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZmluYWxseSIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJwcm9maWxlSW1hZ2VQb3B1cCIsInJlc2V0IiwiYWRkRm9ybVZhbGlkYXRvciIsImNhcmRTZWN0aW9uIiwiY3JlYXRlQ2FyZCIsImNhcmREYXRhIiwiY2FyZHMiLCJjYXJkQWRkUG9wdXAiLCJyZW5kZXJDYXJkIiwiY2FyZCIsImNhcmREZWxldGVQb3B1cCIsInNldFN1Ym1pdEFjdGlvbiIsImFjdGlvbiIsImRhdGEiLCJpbWFnZVBvcHVwIiwiX2ltYWdlIiwiX2NhcHRpb24iXSwic291cmNlUm9vdCI6IiJ9